{
    "name": "alvincoded/laravel-mtn-momo-ai",
    "description": "A Laravel package for integrating MTN Mobile Money API with AI capabilities",
    "keywords": ["laravel", "ai", "artificial-intelligence", "gpt", "claude", "gemini", "MTN", "mobile-money", "api"],
    "type": "library",
    "license": "MIT",
    "authors": [
        {
            "name": "Alvin Panford",
            "email": "panfordalvin@gmail.com",
            "role": "Developer"
        }
    ],
    "homepage": "https://github.com/alvincoded/laravel-mtn-momo-ai",
    "support": {
        "issues": "https://github.com/alvincoded/laravel-mtn-momo-ai/issues",
        "source": "https://github.com/alvincoded/laravel-mtn-momo-ai"
    },
    "funding": [
        {
            "type": "github",
            "url": "https://github.com/sponsors/alvincoded"
        }
    ],
    "require": {
        "php": "^8.1|^8.2",
        "illuminate/support": "^9.0|^10.0|^11.0",
        "laravel/framework": "^9.46.0|^10.34.2|^11.23.5",
        "guzzlehttp/guzzle": "^7.9",
        "mozex/anthropic-laravel": "^1.1",
        "openai-php/client": "^0.10.3",
        "google-gemini-php/laravel": "^1.0"
    },
    "require-dev": {
        "mockery/mockery": "^1.6",
        "orchestra/testbench": "7.0|^8.0|^9.0|^10.0|^11.0",
        "phpunit/phpunit": "^9.0|^10.0",
        "friendsofphp/php-cs-fixer": "^3.67",
        "phpstan/phpstan": "^1.10",
        "nunomaduro/larastan": "^2.0",
        "symfony/var-dumper": "^6.0|^7.0",
        "vimeo/psalm": "^5.26",
        "rector/rector": "^0.19"
    },
    "autoload": {
        "psr-4": {
            "AlvinCoded\\MtnMomoAi\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "AlvinCoded\\MtnMomoAi\\Tests\\": "tests/"
        }
    },
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/AlvinCoded/laravel-mtn-momo-ai"
        }
    ],
    "extra": {
        "laravel": {
            "providers": [
                "AlvinCoded\\MtnMomoAi\\MtnMomoAiServiceProvider"
            ],
            "aliases": {
                "MtnMomoAi": "AlvinCoded\\MtnMomoAi\\Facades\\MtnMomoAi"
            }
        }
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "php-http/discovery": true,
            "pestphp/pest-plugin": true
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "@php ./vendor/bin/testbench package:discover --ansi"
        ],
        "analyse": "vendor/bin/phpstan analyse",
        "baseline": "vendor/bin/phpstan analyse --generate-baseline",
        "format": "vendor/bin/php-cs-fixer fix --allow-risky=yes",
        "test": "vendor/bin/phpunit",
        "test-coverage": "vendor/bin/phpunit --coverage-html coverage",
        "psalm": "vendor/bin/psalm",
        "rector": "vendor/bin/rector process",
        "check-style": "vendor/bin/php-cs-fixer fix --dry-run --diff",
        "fix-style": "vendor/bin/php-cs-fixer fix",
        "clear": [
            "@php vendor/bin/testbench package:purge-skeleton --ansi",
            "rm -rf vendor",
            "rm -rf composer.lock"
        ]
    },
    "scripts-descriptions": {
        "analyse": "Run static analysis",
        "baseline": "Generate baseline for static analysis",
        "format": "Format code using PHP CS Fixer",
        "test": "Run PHPUnit tests",
        "test-coverage": "Run PHPUnit tests with coverage report",
        "psalm": "Run Psalm static analysis",
        "rector": "Run Rector to upgrade code",
        "check-style": "Check code style",
        "fix-style": "Fix code style",
        "clear": "Clear all generated files"
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
